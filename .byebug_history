c
c!
c
cnpj
n
c
CpfCnpjPlus.valid_cnpj?(cnpj)
cnpj = CpfCnpjPlus.generate_cnpj
c
CpfCnpjPlus.generate_cnpj(true)
CpfCnpjPlus.generate_cnpj(alfa: true)
CpfCnpjPlus.generate_cnpj
cnpj = CpfCnpjPlus.generate_cnpj
c
cpf1 = described_class.generate
allow(described_class).to receive(:rand).and_return(*0..8)
c!
c
described_class
described_class.generate
cpf1 = described_class.generate
allow(described_class).to receive(:rand).and_return(*0..8)
described_class
c!
c
base
base.chars
c
base.chars
c
base.chars
c
base.chars
c
base.chars
c
base.chars
c
base.chars
c
base.chars
c
base.chars
c
base.chars
c
base.chars
c
base.chars
c
base.chars
c
base
c
base.chars
base
c
base + digit1.to_s
base + digit.to_s
base
q
c
digit2
n
11-5
sum2%11
digit1
11-2
sum1%11
sum1
base
n
c
base
CpfCnpjPlus.valid_cpf?(cpf)
cpf = base+"80"
base+80
base
11-3
sum1%11
sum1
sum2%11
sum2
n
sum2
n
sum1
base
11-3
sum1%11
sum1
c
described_class.valid_cpf?("10321255780")
described_class.valid_cpf?("103.212.557-80")
described_class.valid_cpf?("10321255780")
